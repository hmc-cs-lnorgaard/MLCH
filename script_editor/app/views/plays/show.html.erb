<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN" "http://www.w3.org/TR/REC-html40/loose.dtd">
<html><body style = "background-color: #faebd7">
    <p id="notice"></p>

    <!-- 
        Decide what XML file to open depending on the URL.
        We did them one-by-one because the URL's didn't match
        Folger Digital Text's file-naming scheme. 
    -->
    <% doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/MND.xml"))
    if "#{request.fullpath}" == "/plays/a_midsummer_nights_dream"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/MND.xml"))
    elsif "#{request.fullpath}" == "/plays/alls_well_that_ends_well"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/AWW.xml"))
    elsif "#{request.fullpath}" == "/plays/antony_and_cleopatra"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/Ant.xml"))
    elsif "#{request.fullpath}" == "/plays/as_you_like_it"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/AYL.xml"))
    elsif "#{request.fullpath}" == "/plays/coriolanus"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/Cor.xml"))
    elsif "#{request.fullpath}" == "/plays/cymbeline"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/Cym.xml"))
    elsif "#{request.fullpath}" == "/plays/hamlet"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/Ham.xml"))
    elsif "#{request.fullpath}" == "/plays/henry_iv_part_1"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/1H4.xml"))
    elsif "#{request.fullpath}" == "/plays/henry_iv_part_2"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/2H4.xml"))
    elsif "#{request.fullpath}" == "/plays/henry_v"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/H5.xml"))
    elsif "#{request.fullpath}" == "/plays/henry_vi_part_1"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/1H6.xml"))
    elsif "#{request.fullpath}" == "/plays/henry_vi_part_2"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/2H6.xml"))
    elsif "#{request.fullpath}" == "/plays/henry_vi_part_3"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/3H6.xml"))
    elsif "#{request.fullpath}" == "/plays/henry_viii"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/H8.xml"))
    elsif "#{request.fullpath}" == "/plays/julius_caesar"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/JC.xml"))
    elsif "#{request.fullpath}" == "/plays/king_john"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/Jn.xml"))
    elsif "#{request.fullpath}" == "/plays/king_lear"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/Lr.xml"))
    elsif "#{request.fullpath}" == "/plays/loves_labors_lost"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/LLL.xml"))
    elsif "#{request.fullpath}" == "/plays/lucrece"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/Luc.xml"))
    elsif "#{request.fullpath}" == "/plays/macbeth"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/Mac.xml"))
    elsif "#{request.fullpath}" == "/plays/measure_for_measure"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/MM.xml"))
    elsif "#{request.fullpath}" == "/plays/much_ado_about_nothing"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/Ado.xml"))
    elsif "#{request.fullpath}" == "/plays/othello"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/Oth.xml"))
    elsif "#{request.fullpath}" == "/plays/pericles"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/Per.xml"))
    elsif "#{request.fullpath}" == "/plays/richard_ii"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/R2.xml"))
    elsif "#{request.fullpath}" == "/plays/richard_iii"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/R3.xml"))
    elsif "#{request.fullpath}" == "/plays/romeo_and_juliet"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/Rom.xml"))
    elsif "#{request.fullpath}" == "/plays/shakespeares_sonnets"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/Son.xml"))
    elsif "#{request.fullpath}" == "/plays/taming_of_the_shrew"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/Shr.xml"))
    elsif "#{request.fullpath}" == "/plays/the_comedy_of_errors"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/Err.xml"))
    elsif "#{request.fullpath}" == "/plays/the_merchant_of_venice"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/MV.xml"))
    elsif "#{request.fullpath}" == "/plays/the_merry_wives_of_windsor"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/Wiv.xml"))
    elsif "#{request.fullpath}" == "/plays/the_phoenix_and_turtle"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/PhT.xml"))
    elsif "#{request.fullpath}" == "/plays/the_tempest"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/Tmp.xml"))
    elsif "#{request.fullpath}" == "/plays/the_two_gentlemen_of_verona"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/TGV.xml"))
    elsif "#{request.fullpath}" == "/plays/the_two_noble_kinsmen"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/TNK.xml"))
    elsif "#{request.fullpath}" == "/plays/the_winters_tale"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/WT.xml"))
    elsif "#{request.fullpath}" == "/plays/timon_of_athens"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/Tim.xml"))
    elsif "#{request.fullpath}" == "/plays/titus_andronicus"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/Tit.xml"))
    elsif "#{request.fullpath}" == "/plays/troilus_and_cressida"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/Tro.xml"))
    elsif "#{request.fullpath}" == "/plays/twelfth_night"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/TN.xml"))
    elsif "#{request.fullpath}" == "/plays/venus_and_adonis"
        doc = Nokogiri::XML(File.open("FolgerDigitalTexts_XML_Complete/Ven.xml"))
    end %>


    <!-- 
        Get title of play and display in the top left corner of the page. Clicking on the title will take
        you to the home page.
    -->
    <div class="script-title">
        <div id="Home-button">
            <a id="home" href="/">
                <p style = "margin: 12px" id="title"></p>
            </a>
        </div>
        <% title = doc.css('title').first %>
        <script>
            document.getElementById('title').innerHTML = '<%= escape_javascript title.inner_text %>';
        </script>
        <div id="About-button">
                <p style = "margin: 12px" id="about">About</p>
        </div>
    </div>


    <!-- 
        Parse the XML file for number of acts & scenes in order to 
        create the navigation bar 
    -->
    <div class="script-side-bar">
        <div class="play-navigation">

            <!-- This button shows the play's synopsis -->
            <button class="nav-synopsis" id="synopsis-button">SYNOPSIS</button>

            <!-- This button shows the play's analytics -->
            <button class="nav-analytics" id="analytics-button">ANALYTICS</button>

            <!-- Create a button for each act and scene in the play -->
            <% currAct = 1 %>
            <% currScene = 1 %>
            <% currIndex = 1 %>
            <% acts= doc.css('//div1') %>
            <% acts.each do |act| %>
                <button class="nav-act" id="current-act"><%= "ACT " + currAct.to_s %></button>
                <script>
                    document.getElementById('current-act').id = '<%= escape_javascript "na" + currAct.to_s %>';
                </script>
                <% currAct = currAct + 1 %>
                <% currScene = 1 %>
                <% scenes = Nokogiri::XML(act.to_s).css('//div2') %>
                <% scenes.each do |scene| %>
                    <button class="nav-scene" id="current-scene"><%= "SCENE " + currScene.to_s %></button>
                    <script>
                        document.getElementById('current-scene').id = '<%= escape_javascript "ns" + currIndex.to_s %>';
                    </script>
                    <% currScene = currScene + 1 %>
                    <% currIndex = currIndex + 1 %>
                <% end%>
            <%end%>
        </div>
    </div>


    <!-- 
        The synopsis will show up here as a popup 
    -->  
    <div id="synopsis-modal" class="shown-modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <div class="hidden-synopsis" id="hidden-synopsis"></div>
            <% synopsistext = doc.css('//div[type="synopsis"]').text %>
            <script>
                document.getElementById('hidden-synopsis').innerHTML = '<%= escape_javascript synopsistext %>';
            </script>
        </div>
    </div>


    <!-- 
        The analytics will show up here as a popup 
    -->
    <div id="analytics-modal" class="shown-modal">
        <div class="modal-content">
            <span class="close2">&times;</span>
            <div class="hidden-analytics" id="hidden-analytics"></div>
            <% analyticstext = "Total Lines: ????" %>
            <script>
                document.getElementById('hidden-analytics').innerHTML = '<%= escape_javascript analyticstext %>';
            </script>
        </div>
    </div>


    <!-- 
        Parse the XML file for the actual script, and display everything 
    -->
    <div class="script-main"> 
        <% currAct = 1 %>
        <% currScene = 1 %>
        <% currIndex = 1 %>  

        <% acts= doc.css('//div1') %>
        <% acts.each do |act| %>
            <% if Nokogiri::XML(act.to_s).css('head').first != nil %>
            <div class="actDiv" id="Diva"><button class="acthead" id="current-act" data-cut="false" data-display="true"> <%= Nokogiri::XML(act.to_s).css('head').first.inner_text %></button><br></b>
            <% end %>
            <script>
                document.getElementById('current-act').id = '<%= escape_javascript "a" + currAct.to_s %>';
                document.getElementById('Diva').id = '<%= escape_javascript "Diva" + currAct.to_s%>';
            </script>
            <% currAct = currAct + 1 %>
            <% scenes = Nokogiri::XML(act.to_s).css('//div2') %>
            <% currScene = 1 %>
            <% scenes.each do |scene| %>
                <% if Nokogiri::XML(scene.to_s).css('head').first != nil %>
                <div class="sceneDiv" id="Divs"><button class="scenehead" id="current-scene" data-cut="false" data-display="true"><%= Nokogiri::XML(scene.to_s).css('head').first.inner_text %></button><br>
                <% end %>
                <script>
                    document.getElementById('current-scene').id = '<%= escape_javascript "s" + currIndex.to_s %>';
                    document.getElementById('Divs').id = '<%= escape_javascript "Divs" + currIndex.to_s%>';
                </script>
                <% currScene = currScene + 1 %>
                <% currIndex = currIndex + 1 %>

                <% lines = Nokogiri::XML(scene.to_s).css('//sp') %>
                <% stages = Nokogiri::XML(scene.to_s).css('stage').to_a %>

                <% lines.each do |line| %>
                <!-- DISPLAY STAGE DIRECTIONS -->
                    <!-- Get line id -->
                    <% lineN = line.attr("xml:id").to_s.gsub("sp-","").to_f %>

                    <% stages.each do |stage| %>
                        <!-- Get stage direction id -->
                        <% stageN = stage.attr('xml:id').to_s.gsub("stg-","").to_f %>
                        <!-- If there is a stage dir that comes before the line -->
                        <% if (stageN < lineN) and (stageN >= lineN-1.0)%>
                            <!-- display stage direction -->
                            <br>
                            <button class="stage" data-cut="false" data-display="true"> <%= stage.inner_text %> </button> <br>
                            <% stages.delete(stage) %>
                        <% end %>
                    <% end %>

                    <!-- Getting all the info needed for each line -->
                    <% speaker = Nokogiri::XML(line.to_s).css('speaker') %>
                    <% milestones = Nokogiri::XML(line.to_s).css('milestone') %>
                    <% spwords = Nokogiri::XML(line.to_s).css('w','c','pc') %>

                    <!-- DISPLAY SPEAKER -->
                    <br><p class="speaker"><%=speaker.inner_text%> </p><br>

                    <!-- DISPLAY LINES -->
                    <% milestones.each do |ms| %>

                        <% msN = ms.attr("xml:id").to_s.gsub("ftln-","").to_f %>
                        <% stages.each do |stage| %>
                            <!-- Get stage direction id -->
                            <% stageN = stage.attr('xml:id').to_s.gsub("stg-","").to_f %>
                            <!-- If there is a stage dir inside speech -->
                            <% if (stageN <= msN) and (stageN >= msN-1.0) %>
                            <!-- display stage direction -->
                                <button class="stage" data-cut="false" data-display="true"> <%= stage.inner_text %> </button> <br>
                                <% stages.delete(stage) %>
                            <% end %>
                        <% end %>

                        <!-- get line number -->
                        <% lineNum = ms.attr("n").to_s.split(".")[2] %>
                        <!-- get corresps per milestone in array -->
                        <% wordIDs = ms.attr("corresp").to_s.split(" ") %>
                        <!-- remove #s -->
                        <% wordIDs = wordIDs.map { |w| w.gsub("#","")} %>
                        <!-- Search spwords for corresponding w/c/pc -->
                        
                        <!-- DISPLAY LINE NUMBER -->
                        <p class="lineNum"><%= lineNum %></p>

                        <% wordIDs.each do |id| %>
                            <% spwords.each do |word| %>
                                <% if word.attr('xml:id').to_s == id %>
                                <!-- DISPLAY EACH WORD -->
                                <% if (word.inner_text == ".") || (word.inner_text == ",") || (word.inner_text == "?") || (word.inner_text == "!") || (word.inner_text == ";") || (word.inner_text == ":") %>
                                    <button class="punc" data-cut="false" data-display="true"><%= word.inner_text %></button>
                                <% else %>
                                    <% if word.inner_text != "" && word.inner_text != " " %>
                                        <button class="word" data-cut="false" data-display="true"><%= word.inner_text %></button>
                                    <% end %>
                                <% end %>
                            <% end %>
                        <% end %>
                    <% end %>

                    <!-- BREAK FOR NEW LINE -->
                    <br>


                    <% stages.each do |stage| %>
                        <!-- Get stage direction id -->
                        <% stageN = stage.attr('xml:id').to_s.gsub("stg-","").to_f %>
                        <!-- If there is a stage dir inside speech -->
                        <% if (stageN >= msN) and (stageN < msN+1.0) %>
                            <!-- display stage direction -->
                            <button class="stage" data-cut="false" data-display="true"> <%= stage.inner_text %> </button> <br>
                            <% stages.delete(stage) %>
                        <% end %>
                    <% end %>

                <% end %>
                <% end %>
                
                <br>
                <% stages.each do |stage| %>
                    <button class="stage" data-cut="false" data-display="true"><%= stage.inner_text %></button> <br>
                    <% stages.delete(stage) %>
                <% end %>
            <% end%>
            </div>
            <br>
        <%end%>
        </div>
    </div>

    <script>
        document.querySelector(".script-main").addEventListener("mousedown", drag, false);
        document.querySelector(".script-main").addEventListener("mouseover", doCut, false);
        document.querySelector(".script-main").addEventListener("mousedown", doCut, false);
        document.querySelector(".script-main").addEventListener("mouseup", lift, false);
        var mousedrag = false;
        var currId = 0;

        function drag(e)
        {
            mousedrag = true;
        }

        function lift(e)
        {
            mousedrag = false;
            currId = 0;
        }

        /*function numDigits(i)
        {
            console.log("numDigits");
            if(i >= 1000)
            {
                if(i >= 10000)
                {
                    if(i >= 100000)
                    {
                        if(i >= 1000000)
                        {
                            return 7;
                        }
                        return 6;
                    }
                    return 5;
                }
                return 4;
            }
            else if(i >= 1)
            {
                if(i >= 10)
                {
                    if(i >= 100)
                    {
                        return 3;
                    }
                    return 2;
                }
                return 1;
            }
            return 0;
        }*/

        function numeralize(s)
        {
            console.log("Numeralize id:")
            console.log(s);
            var intString = i.substr(1);
            return parseInt(intString);
        }

        /*function wrap(i)
        {
            console.log("Wrapping");
            for(;i != currId;i -= 10)
            {
                var digits = numDigits(i);
                var checkId = "";
                for(int j = 0;j < digits;++j)
                {
                    checkId.concat("0");
                }
                var stringId = toString(i);
                checkId.concat(stringId);
                var w = "w";
                var c = "c";
                if(document.getElementById(w.concat(checkId)) != null || document.getElementById(c.concat(checkId)) != null)
                {
                    var wrappedElement = document.getElementById(w.concat(checkId));
                    if (clickedItem.dataset.cut.toLowerCase() == "false" && !e.shiftKey) {
                        clickedItem.style.color = "#D3D3D3";
                        clickedItem.style.textDecoration = "line-through";
                        clickedItem.dataset.cut = "true";
                    }
                    else if(e.shiftKey){
                        clickedItem.style.color = "#000000";
                        clickedItem.style.textDecoration = "none";
                        clickedItem.dataset.cut = "false";
                    }
                }
            }
            console.log("Wrapping ending");
        } */

        // all words will need to be printed within the div class "script-main"
        function doCut(e) {
            var clickedItem = e.target;
            // act
            if (clickedItem.getAttribute("class") == "acthead") {
            //    if (clickedItem.tagName.toLowerCase() == "button") {
            //
            //        // Don't cut Acts
            //        var entireAct = document.getElementById("Div" + clickedItem.id);
            //        var allChildren = entireAct.getElementsByTagName("button");
            //        if (clickedItem.dataset.cut.toLowerCase() == "false") {
            //            for (var i = 0; i < allChildren.length; i++) {
            //                allChildren[i].style.color = "#D3D3D3";
            //                allChildren[i].style.textDecoration = "line-through";
            //                allChildren[i].dataset.cut = "true";
            //            }
            //            //clickedItem.style.color = "#D3D3D3";
            //            //clickedItem.style.textDecoration = "line-through";
            //            clickedItem.dataset.cut = "true";
            //        }
            //        // perform uncut
            //        else {
            //            for (var i = 0; i < allChildren.length; i++) {
            //                allChildren[i].style.color = "#000000";
            //                allChildren[i].style.textDecoration = "none";
            //                allChildren[i].dataset.cut = "false";
            //            }
            //            // clickedItem.style.color = "#000000";
            //            // clickedItem.style.textDecoration = "none";
            //            clickedItem.dataset.cut = "false";
            //        }
            //    }    
            }
            // scene
            else if (clickedItem.getAttribute("class") == "scenehead") {
            //    if (clickedItem.tagName.toLowerCase() == "button") {
            //        // perform cut
            //        var entireScene = document.getElementById("Div" + clickedItem.id);
            //        var allChildren = entireScene.getElementsByTagName("button");
            //        if (clickedItem.dataset.cut.toLowerCase() == "false") {
            //            for (var i = 0; i < allChildren.length; i++) {
            //                allChildren[i].style.color = "#D3D3D3";
            //                allChildren[i].style.textDecoration = "line-through";
            //                allChildren[i].dataset.cut = "true";
            //            }
            //            //clickedItem.style.color = "#D3D3D3";
            //            //clickedItem.style.textDecoration = "line-through";
            //            clickedItem.dataset.cut = "true";
            //        }
            //        // perform uncut
            //        else {
            //            for (var i = 0; i < allChildren.length; i++) {
            //                allChildren[i].style.color = "#000000";
            //                allChildren[i].style.textDecoration = "none";
            //                allChildren[i].dataset.cut = "false";
            //            }
            //            //clickedItem.style.color = "#000000";
            //            //clickedItem.style.textDecoration = "none";
            //            clickedItem.dataset.cut = "false";
            //        }
            //    }    
            }
            // stage
            else if (clickedItem.getAttribute("class") == "stage") {
                if (clickedItem.tagName.toLowerCase() == "button") {
                    if (clickedItem.dataset.cut.toLowerCase() == "false" && mousedrag && !e.shiftKey) {
                        clickedItem.style.color = "#D3D3D3";
                        clickedItem.style.textDecoration = "line-through";
                        clickedItem.dataset.cut = "true";
                    }
                    else if(e.shiftKey && mousedrag) {
                        clickedItem.style.color = "#000000";
                        clickedItem.style.textDecoration = "none";
                        clickedItem.dataset.cut = "false";
                    }
                }    
            }
            // line
            else if (clickedItem.getAttribute("class") == "word" || clickedItem.getAttribute("class") == "punc") {
                if (clickedItem.tagName.toLowerCase() == "button") {
                    if (clickedItem.dataset.cut.toLowerCase() == "false" && mousedrag && !e.shiftKey) {
                        clickedItem.style.color = "#D3D3D3";
                        clickedItem.style.textDecoration = "line-through";
                        clickedItem.dataset.cut = "true";
                        if(currId != 0)
                        {
                            console.log(clickedItem.id.to_s);
                            /*var intId = numeralize(clickedItem.id);
                            console.log(intId);
                            //wrap(id);
                            currId = intId;*/
                        }
                        else
                        {
                            console.log(clickedItem.id.to_s);
                            /*var intId = numeralize(clickedItem.id);
                            console.log(intId);
                            currId = intId;*/
                        }
                    }
                    else if(e.shiftKey && mousedrag){
                        clickedItem.style.color = "#000000";
                        clickedItem.style.textDecoration = "none";
                        clickedItem.dataset.cut = "false";
                        if(currId != 0)
                        {
                            console.log(clickedItem.id.to_s);
                            /*var intId = numeralize(clickedItem.id);
                            console.log(intId);
                            //wrap(id);
                            currId = intId;*/
                        }
                        else
                        {
                            console.log(clickedItem.id.to_s);
                            /*var intId = numeralize(clickedItem.id);
                            console.log(intId);
                            currId = intId;*/
                        }
                    }
                }    
            }
        };
    </script>



    <script>
        /** 
         * This controls scene buttons in the navigation bar
         */
        var sceneButtons = document.getElementsByClassName("nav-scene");
        var sceneLength = sceneButtons.length;
        for (var i = 0; i < sceneLength; i++) {
            sceneButton = sceneButtons[i];
            sceneButton.addEventListener("click", showScene, false);
        }
        function showScene(scene) {
            var allScenes = document.getElementsByClassName("scenehead");
            for (var i = 0; i < allScenes.length; i++) {
                if (("n" + allScenes[i].id) == scene.target.id) {
                    allScenes[i].style.backgroundColor = "yellow";
                    window.location.hash = allScenes[i].id;
                }
                else {
                    allScenes[i].style.backgroundColor = "transparent";
                }
            }
            var allActs = document.getElementsByClassName("acthead");
            for (var i = 0; i < allActs.length; i++) {
                allActs[i].style.backgroundColor = "transparent";
            }
        }
        /** 
         * This controls act buttons in the navigation bar
         */
        var actButtons = document.getElementsByClassName("nav-act");
        var actLength = actButtons.length;
        for (var i = 0; i < actLength; i++) {
            actButton = actButtons[i];
            actButton.addEventListener("click", showAct, false);
        }
        function showAct(act) {
            var allActs = document.getElementsByClassName("acthead");
            for (var i = 0; i < allActs.length; i++) {
                if (("n" + allActs[i].id) == act.target.id) {
                    allActs[i].style.backgroundColor = "yellow";
                    window.location.hash = allActs[i].id;
                }
                else {
                    allActs[i].style.backgroundColor = "transparent";
                }
            }
            var allScenes = document.getElementsByClassName("scenehead");
            for (var i = 0; i < allScenes.length; i++) {
                allScenes[i].style.backgroundColor = "transparent";
            }
        }
        /** 
         * This controls the synopsis button in the navigation bar.
         */
        var modal = document.getElementById("synopsis-modal");
        var btn = document.getElementById("synopsis-button");
        var span = document.getElementsByClassName("close")[0];
        btn.onclick = function() {
            modal.style.display = "block";
        }
        span.onclick = function() {
            modal.style.display = "none";
        }
        /** 
         * This controls the analytics button in the navigation bar.
         */
        var modal2 = document.getElementById("analytics-modal");
        var btn2 = document.getElementById("analytics-button");
        var span2 = document.getElementsByClassName("close2")[0];
        btn2.onclick = function() {
            modal2.style.display = "block";
        }
        span2.onclick = function() {
            modal2.style.display = "none";
        }
        /**
         * This closes the modals if the user clicks outside of either 
         * the synopsis or analytics modal.
         */
        window.onclick = function(event) {
            if (event.target == modal2) {
                modal2.style.display = "none";
            }
            if (event.target == modal) {
                modal.style.display = "none";
            }
        } 
    </script>

</body></html>
